<%- include('../header') %>
<h1>View Analytics</h1>
<link rel="stylesheet" href="/css/main.css">

<h2>Frequent Customer</h2>
<button id="frequentCustomerButton" class="btn">View Frequent Customer</button>
<div id="frequentCustomerResult"></div>

<h2>Customer Flights</h2>
<form id="customerFlightsForm">
    <label for="customer_email">Customer Email:</label>
    <input type="email" id="customer_email" name="email" required>
    <button type="submit" class="btn">View Flights</button>
</form>
<div id="customerFlightsResult"></div>

<h2>Flight Ratings</h2>
<form id="flightRatingsForm">
    <select id="flight_number" name="flight_number" required>
        <option value="" disabled selected>Select Flight Number</option>
    </select>
    <button type="submit" class="btn">View Ratings</button>
</form>
<div id="flightRatingsResult"></div>

<h2>Flight Customers</h2>
<form id="flightCustomersForm">
    <label for="flightSelect">Select Flight:</label>
    <select id="flightSelect" name="flightSelect" required>
        <option value="" disabled selected>Select a flight</option>
    </select>
    <button type="submit" class="btn">View Customers</button>
</form>
<div id="flightCustomersResult"></div>

<script>
// Populate flight dropdown
fetch('/staff/all-flights')
    .then(response => response.json())
    .then(flights => {
        const flightSelect = document.getElementById('flightSelect');
        flights.forEach(flight => {
            const option = document.createElement('option');
            option.value = `${flight.flight_number}|${flight.departure_datetime}`;
            option.text = `${flight.airline_name} ${flight.flight_number} - ${new Date(flight.departure_datetime).toLocaleString()}`;
            flightSelect.add(option);
        });
    })
    .catch(error => console.error('Error fetching flights:', error));

// Handle frequent customer view
document.getElementById('frequentCustomerButton').addEventListener('click', function() {
    fetch('/staff/frequent-customer', {
        method: 'GET'
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .then(data => {
        if (data.email && data.ticket_count !== undefined) {
            document.getElementById('frequentCustomerResult').innerText = `${data.email} - ${data.ticket_count} tickets`;
        } else {
            document.getElementById('frequentCustomerResult').innerText = 'Unexpected response format';
        }
    })
    .catch(error => {
        console.error('Error:', error);
        document.getElementById('frequentCustomerResult').innerText = 'An error occurred while fetching frequent customer data';
    });
});

// Handle customer flights view
document.getElementById('customerFlightsForm').addEventListener('submit', function(event) {
    event.preventDefault();
    const email = document.getElementById('customer_email').value;
    fetch(`/staff/customer-flights/${email}`, {
        method: 'GET'
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .then(data => {
        console.log('Flights data:', data);
        const resultDiv = document.getElementById('customerFlightsResult');
        if (Array.isArray(data) && data.length > 0) {
            let table = `<table class="styled-table">
                            <thead>
                                <tr>
                                    <th>Flight Number</th>
                                    <th>Departure Airport</th>
                                    <th>Arrival Airport</th>
                                    <th>Departure Date & Time</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>`;
            data.forEach(flight => {
                table += `<tr>
                            <td>${flight.flight_number}</td>
                            <td>${flight.departure_airport}</td>
                            <td>${flight.arrival_airport}</td>
                            <td>${new Date(flight.departure_datetime).toLocaleString()}</td>
                            <td>${flight.status}</td>
                          </tr>`;
            });
            table += `</tbody></table>`;
            resultDiv.innerHTML = table;
        } else {
            resultDiv.innerText = 'No flights found or unexpected response format';
        }
    })
    .catch(error => {
        console.error('Error:', error);
        document.getElementById('customerFlightsResult').innerText = 'An error occurred while fetching customer flights';
    });
});

// Populate flight dropdown
fetch('/staff/departed-flights')
    .then(response => response.json())
    .then(flights => {
        const flightSelect = document.getElementById('flight_number');
        flights.forEach(flight => {
            const option = document.createElement('option');
            option.value = `${flight.flight_number}|${flight.departure_datetime}`;
            option.text = `${flight.flight_number} - ${new Date(flight.departure_datetime).toLocaleString()}`;
            flightSelect.add(option);
        });
    })
    .catch(error => console.error('Error fetching departed flights:', error));

// Handle flight ratings view
document.getElementById('flightRatingsForm').addEventListener('submit', function(event) {
    event.preventDefault();
    const selectedValue = document.getElementById('flight_number').value;
    const [flightNumber, departureDatetime] = selectedValue.split('|');

    fetch(`/staff/flight-ratings/${flightNumber}/${departureDatetime}`, {
        method: 'GET'
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .then(data => {
        console.log('Ratings data:', data);
        const resultDiv = document.getElementById('flightRatingsResult');
        if (Array.isArray(data) && data.length > 0) {
            let table = `<table class="styled-table">
                            <thead>
                                <tr>
                                    <th>Average Rating</th>
                                    <th>Rating</th>
                                    <th>Comments</th>
                                </tr>
                            </thead>
                            <tbody>`;
            data.forEach(rating => {
                table += `<tr>
                            <td>${parseFloat(rating.average_rating).toFixed(2)}</td>
                            <td>${rating.rating}</td>
                            <td>${rating.comments || 'No comments'}</td>
                          </tr>`;
            });
            table += `</tbody></table>`;
            resultDiv.innerHTML = table;
        } else {
            resultDiv.innerText = 'No ratings found or unexpected response format';
        }
    })
    .catch(error => {
        console.error('Error:', error);
        document.getElementById('flightRatingsResult').innerText = 'An error occurred while fetching flight ratings';
    });
});

// Handle flight customers view
document.getElementById('flightCustomersForm').addEventListener('submit', function(event) {
    event.preventDefault();
    const selectedValue = document.getElementById('flightSelect').value;
    const [flightNumber, departureDatetime] = selectedValue.split('|');

    console.log('Selected flight:', { flightNumber, departureDatetime });

    fetch(`/staff/flight-customers/${flightNumber}/${departureDatetime}`, {
        method: 'GET'
    })
    .then(response => {
        console.log('Raw response:', response);
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .then(data => {
        console.log('Fetched customers:', data);

        // Ensure data is an array
        const customers = Array.isArray(data) ? data : [data];

        const resultDiv = document.getElementById('flightCustomersResult');
        if (customers.length > 0) {
            let table = `<table class="styled-table">
                            <thead>
                                <tr>
                                    <th>Email</th>
                                    <th>First Name</th>
                                    <th>Last Name</th>
                                    <th>Ticket ID</th>
                                    <th>Sold Price</th>
                                    <th>Purchase Date & Time</th>
                                </tr>
                            </thead>
                            <tbody>`;
            customers.forEach(customer => {
                table += `<tr>
                            <td>${customer.email}</td>
                            <td>${customer.first_name}</td>
                            <td>${customer.last_name}</td>
                            <td>${customer.ticket_id}</td>
                            <td>$${customer.sold_price}</td>
                            <td>${new Date(customer.purchase_datetime).toLocaleString()}</td>
                          </tr>`;
            });
            table += `</tbody></table>`;
            resultDiv.innerHTML = table;
        } else {
            resultDiv.innerText = 'No customers found or unexpected response format';
        }
    })
    .catch(error => {
        console.error('Error:', error);
        document.getElementById('flightCustomersResult').innerText = 'An error occurred while fetching flight customers';
    });
});
</script>
