<h1>Manage Flights</h1>
<link rel="stylesheet" href="/css/main.css">

<!-- Section to create a new flight -->
<h2>Create New Flight</h2>
<form id="createFlightForm">
    <input type="text" name="flight_number" placeholder="Flight Number" required>
    <input type="datetime-local" name="departure_datetime" placeholder="Departure DateTime" required>
    <input type="text" name="departure_airport" placeholder="Departure Airport" required>
    <input type="text" name="arrival_airport" placeholder="Arrival Airport" required>
    <input type="number" name="base_price" placeholder="Base Price" required>
    <input type="text" name="status" placeholder="Status" required>
    <button type="submit">Create Flight</button>
</form>
<div id="createFlightResult"></div>

<!-- Section to update a flight -->
<h2>Update Flight</h2>
<form id="updateFlightForm">
    <input type="text" id="update_flight_number" name="flight_number" placeholder="Flight Number" required>
    <input type="datetime-local" id="update_departure_datetime" name="departure_datetime" placeholder="Departure DateTime" required>
    <input type="text" name="departure_airport" placeholder="Departure Airport" required>
    <input type="text" name="arrival_airport" placeholder="Arrival Airport" required>
    <input type="number" name="base_price" placeholder="Base Price" required>
    <input type="text" name="status" placeholder="Status" required>
    <button type="submit">Update Flight</button>
</form>
<div id="updateFlightResult"></div>

<!-- Section to view flights with filters -->
<h2>View Flights</h2>

<!-- Form for the "to" flight -->
<form id="toFlightForm">
    <input type="text" name="departureAirport" placeholder="Departure Airport" required>
    <input type="text" name="arrivalAirport" placeholder="Arrival Airport" required>
    <input type="date" name="departureDate" placeholder="Departure Date" required>
    <button type="submit">View Departure Flight</button>
</form>
<div id="toFlightResult"></div>

<!-- Form for the "return" flight -->
<form id="returnFlightForm">
    <input type="text" name="departureAirport" placeholder="Departure Airport" required>
    <input type="text" name="arrivalAirport" placeholder="Arrival Airport" required>
    <input type="date" name="departureDate" placeholder="Return Date" required>
    <button type="submit">View Return Flight</button>
</form>
<div id="returnFlightResult"></div>

<!-- Section to change flight status -->
<h2>Change Flight Status</h2>
<form id="changeFlightStatusForm">
    <input type="text" id="status_flight_number" name="flight_number" placeholder="Flight Number" required>
    <input type="datetime-local" id="status_departure_datetime" name="departure_datetime" placeholder="Departure DateTime" required>
    <input type="text" name="status" placeholder="New Status" required>
    <button type="submit">Change Status</button>
</form>
<div id="changeFlightStatusResult"></div>

<script>
// AJAX for creating a new flight
document.getElementById('createFlightForm').addEventListener('submit', function(event) {
    event.preventDefault();
    const formData = new FormData(this);
    fetch('/staff/create-flight', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: new URLSearchParams(formData)
    })
    .then(response => response.json())
    .then(data => {
        console.log('Create flight response:', data);
        document.getElementById('createFlightResult').innerText = data.message;
    })
    .catch(error => console.error('Error:', error));
});

// AJAX for updating a flight
document.getElementById('updateFlightForm').addEventListener('submit', function(event) {
    event.preventDefault();
    const formData = new FormData(this);
    const flightNumber = document.getElementById('update_flight_number').value;
    const departureDatetime = document.getElementById('update_departure_datetime').value;

    // Log form data to check if all fields are filled
    console.log('Form data:', {
        flightNumber,
        departureDatetime,
        departure_airport: formData.get('departure_airport'),
        arrival_airport: formData.get('arrival_airport'),
        base_price: formData.get('base_price'),
        status: formData.get('status')
    });

    fetch(`/staff/update-flight/${flightNumber}/${departureDatetime}`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: new URLSearchParams(formData)
    })
    .then(response => response.json())
    .then(data => {
        console.log('Update flight response:', data);
        document.getElementById('updateFlightResult').innerText = data.message;
    })
    .catch(error => console.error('Error:', error));
});

// AJAX for viewing the "to" flight
document.getElementById('toFlightForm').addEventListener('submit', function(event) {
    event.preventDefault(); // Prevent default form submission

    // Collect form data
    const formData = new FormData(this);
    const queryParams = new URLSearchParams(formData).toString(); // Convert form data to query string

    // Fetch flights with query parameters
    fetch(`/staff/view-flights?${queryParams}`, {
        method: 'GET'
    })
    .then(response => response.json())
    .then(data => {
        console.log('To flight response:', data);
        const resultDiv = document.getElementById('toFlightResult');
        if (!Array.isArray(data) || data.length === 0) {
            resultDiv.innerHTML = '<p>No flights found.</p>';
        } else {
            // Include base price in the displayed information
            resultDiv.innerHTML = data.map(flight => `
                <p>${flight['Flight Number']} - ${flight['Departure Airport']} to ${flight['Arrival Airport']} on ${flight['Departure Date & Time']} - Base Price: $${flight['Base Price']}</p>
            `).join('');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        document.getElementById('toFlightResult').innerText = error.message;
    });
});

// AJAX for viewing the "return" flight
document.getElementById('returnFlightForm').addEventListener('submit', function(event) {
    event.preventDefault(); // Prevent default form submission

    // Collect form data
    const formData = new FormData(this);
    const queryParams = new URLSearchParams(formData).toString(); // Convert form data to query string

    // Fetch flights with query parameters
    fetch(`/staff/view-flights?${queryParams}`, {
        method: 'GET'
    })
    .then(response => response.json())
    .then(data => {
        console.log('Return flight response:', data);
        const resultDiv = document.getElementById('returnFlightResult');
        if (!Array.isArray(data) || data.length === 0) {
            resultDiv.innerHTML = '<p>No flights found.</p>';
        } else {
            // Include base price in the displayed information
            resultDiv.innerHTML = data.map(flight => `
                <p>${flight['Flight Number']} - ${flight['Departure Airport']} to ${flight['Arrival Airport']} on ${flight['Departure Date & Time']} - Base Price: $${flight['Base Price']}</p>
            `).join('');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        document.getElementById('returnFlightResult').innerText = error.message;
    });
});

// AJAX for changing flight status
document.getElementById('changeFlightStatusForm').addEventListener('submit', function(event) {
    event.preventDefault();
    const formData = new FormData(this);
    const flightNumber = document.getElementById('status_flight_number').value;
    const departureDatetime = document.getElementById('status_departure_datetime').value;
    fetch(`/staff/change-flight-status/${flightNumber}/${departureDatetime}`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: new URLSearchParams(formData)
    })
    .then(response => {
        console.log('Response status:', response.status);
        return response.text().then(text => {
            console.log('Response text:', text);
            if (!response.ok) {
                throw new Error(text);
            }
            return JSON.parse(text);
        });
    })
    .then(data => {
        console.log('Change flight status response:', data);
        document.getElementById('changeFlightStatusResult').innerText = data.message || 'Operation completed';
    })
    .catch(error => {
        console.error('Error:', error);
        document.getElementById('changeFlightStatusResult').innerText = error.message;
    });
});
</script>
