<h1>Manage Flights</h1>
<link rel="stylesheet" href="/css/main.css">

<!-- Section to create a new flight -->
<h2>Create New Flight</h2>
<form id="createFlightForm">
    <input type="text" name="flight_number" placeholder="Flight Number" required>
    <input type="datetime-local" name="departure_datetime" placeholder="Departure DateTime" required>
    <input type="text" name="departure_airport" placeholder="Departure Airport" required>
    <input type="text" name="arrival_airport" placeholder="Arrival Airport" required>
    <input type="number" name="base_price" placeholder="Base Price" required>
    <input type="text" name="status" placeholder="Status" required>
    <select id="create_airplane_id" name="airplane_id" required>
        <!-- Options will be populated by JavaScript -->
    </select>
    <button type="submit">Create Flight</button>
</form>
<div id="createFlightResult"></div>

<!-- Section to update a flight -->
<h2>Update Flight</h2>
<form id="updateFlightForm">
    <input type="text" id="update_flight_number" name="flight_number" placeholder="Flight Number" required>
    <input type="datetime-local" id="update_departure_datetime" name="departure_datetime" placeholder="Departure DateTime" required>
    <input type="text" name="departure_airport" placeholder="Departure Airport" required>
    <input type="text" name="arrival_airport" placeholder="Arrival Airport" required>
    <input type="number" name="base_price" placeholder="Base Price" required>
    <input type="text" name="status" placeholder="Status" required>
    <select id="update_airplane_id" name="airplane_id" required>
        <!-- Options will be populated by JavaScript -->
    </select>
    <button type="submit">Update Flight</button>
</form>
<div id="updateFlightResult"></div>

<!-- Section to view flights with filters -->
<h2>View Flights</h2>

<!-- Form for the "to" flight -->
<form id="toFlightForm">
    <input type="text" name="departureAirport" placeholder="Departure Airport" required>
    <input type="text" name="arrivalAirport" placeholder="Arrival Airport" required>
    <input type="date" name="departureDate" placeholder="Departure Date" required>
    <button type="submit">View Departure Flight</button>
</form>
<div id="toFlightResult"></div>

<!-- Form for the "return" flight -->
<form id="returnFlightForm">
    <input type="text" name="departureAirport" placeholder="Departure Airport" required>
    <input type="text" name="arrivalAirport" placeholder="Arrival Airport" required>
    <input type="date" name="departureDate" placeholder="Return Date" required>
    <button type="submit">View Return Flight</button>
</form>
<div id="returnFlightResult"></div>

<!-- Section to change flight status -->
<h2>Change Flight Status</h2>
<form id="changeFlightStatusForm">
    <input type="text" id="status_flight_number" name="flight_number" placeholder="Flight Number" required>
    <input type="datetime-local" id="status_departure_datetime" name="departure_datetime" placeholder="Departure DateTime" required>
    <input type="text" name="status" placeholder="New Status" required>
    <button type="submit">Change Status</button>
</form>
<div id="changeFlightStatusResult"></div>

<h2>Add Airport</h2>
<form id="addAirportForm">
    <input type="text" name="airport_code" placeholder="Airport Code" maxlength="3" required>
    <input type="text" name="name" placeholder="Name" required>
    <input type="text" name="city" placeholder="City" required>
    <input type="text" name="country" placeholder="Country" required>
    <input type="number" name="number_of_terminals" placeholder="Number of Terminals" required>
    <select name="airport_type" required>
        <option value="" disabled selected>Select Airport Type</option>
        <option value="domestic">Domestic</option>
        <option value="international">International</option>
        <option value="both">Both</option>
    </select>
    <button type="submit" class="btn">Add Airport</button>
</form>
<div id="addAirportResult"></div>

<h2>Add Airplane</h2>
<form id="addAirplaneForm">
    <input type="number" name="airplane_id" placeholder="Airplane ID" required>
    <input type="number" name="number_of_seats" placeholder="Number of Seats" required>
    <input type="text" name="manufacturing_company" placeholder="Manufacturing Company" required>
    <input type="text" name="model_number" placeholder="Model Number" required>
    <input type="date" name="manufacturing_date" placeholder="Manufacturing Date" required>
    <button type="submit" class="btn">Add Airplane</button>
</form>
<div id="addAirplaneResult"></div>

<h2>View Airplanes</h2>
<button id="viewAirplanesButton" class="btn">View Airplanes</button>
<div id="viewAirplanesResult"></div>

<script>
// AJAX for creating a new flight
document.getElementById('createFlightForm').addEventListener('submit', function(event) {
    event.preventDefault();
    const formData = new FormData(this);
    fetch('/staff/create-flight', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: new URLSearchParams(formData)
    })
    .then(response => response.json())
    .then(data => {
        console.log('Create flight response:', data);
        document.getElementById('createFlightResult').innerText = data.message;
    })
    .catch(error => console.error('Error:', error));
});

// AJAX for updating a flight
document.getElementById('updateFlightForm').addEventListener('submit', function(event) {
    event.preventDefault();
    const formData = new FormData(this);
    const flightNumber = document.getElementById('update_flight_number').value;
    const departureDatetime = document.getElementById('update_departure_datetime').value;

    // Log form data to check if all fields are filled
    console.log('Form data:', {
        flightNumber,
        departureDatetime,
        departure_airport: formData.get('departure_airport'),
        arrival_airport: formData.get('arrival_airport'),
        base_price: formData.get('base_price'),
        status: formData.get('status')
    });

    fetch(`/staff/update-flight/${flightNumber}/${departureDatetime}`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: new URLSearchParams(formData)
    })
    .then(response => response.json())
    .then(data => {
        console.log('Update flight response:', data);
        document.getElementById('updateFlightResult').innerText = data.message;
    })
    .catch(error => console.error('Error:', error));
});

// AJAX for viewing the "to" flight
document.getElementById('toFlightForm').addEventListener('submit', function(event) {
    event.preventDefault(); // Prevent default form submission

    // Collect form data
    const formData = new FormData(this);
    const queryParams = new URLSearchParams(formData).toString(); // Convert form data to query string

    // Fetch flights with query parameters
    fetch(`/staff/view-flights?${queryParams}`, {
        method: 'GET'
    })
    .then(response => response.json())
    .then(data => {
        console.log('To flight response:', data);
        const resultDiv = document.getElementById('toFlightResult');
        if (!Array.isArray(data) || data.length === 0) {
            resultDiv.innerHTML = '<p>No flights found.</p>';
        } else {
            // Create a table to display flight information with styles
            let tableHTML = `
                <table class="styled-table">
                    <thead>
                        <tr>
                            <th>Flight Number</th>
                            <th>Departure Airport</th>
                            <th>Arrival Airport</th>
                            <th>Departure Date & Time</th>
                            <th>Base Price</th>
                        </tr>
                    </thead>
                    <tbody>
            `;
            // Populate table rows with flight data
            tableHTML += data.map(flight => `
                <tr>
                    <td>${flight['Flight Number']}</td>
                    <td>${flight['Departure Airport']}</td>
                    <td>${flight['Arrival Airport']}</td>
                    <td>${formatDateTime(flight['Departure Date & Time'])}</td> <!-- Format date and time -->
                    <td>$${flight['Base Price']}</td>
                    <td>$${flight['Base Price']}</td>
                </tr>
            `).join('');
            tableHTML += `
                    </tbody>
                </table>
            `;
            resultDiv.innerHTML = tableHTML; // Insert the table into the result div
        }
    })
    .catch(error => {
        console.error('Error:', error);
        document.getElementById('toFlightResult').innerText = error.message;
    });
});

// Function to format date and time
function formatDateTime(isoString) {
    const date = new Date(isoString); // Convert ISO string to Date object
    return date.toLocaleString(); // Format date to local string
}

// AJAX for viewing the "return" flight
document.getElementById('returnFlightForm').addEventListener('submit', function(event) {
    event.preventDefault(); // Prevent default form submission

    // Collect form data
    const formData = new FormData(this);
    const queryParams = new URLSearchParams(formData).toString(); // Convert form data to query string

    // Fetch flights with query parameters
    fetch(`/staff/view-flights?${queryParams}`, {
        method: 'GET'
    })
    .then(response => response.json())
    .then(data => {
        console.log('Return flight response:', data);
        const resultDiv = document.getElementById('returnFlightResult');
        if (!Array.isArray(data) || data.length === 0) {
            resultDiv.innerHTML = '<p>No flights found.</p>';
        } else {
            // Create a table to display flight information with styles
            let tableHTML = `
                <table class="styled-table">
                    <thead>
                        <tr>
                            <th>Flight Number</th>
                            <th>Departure Airport</th>
                            <th>Arrival Airport</th>
                            <th>Departure Date & Time</th>
                            <th>Base Price</th>
                        </tr>
                    </thead>
                    <tbody>
            `;
            // Populate table rows with flight data
            tableHTML += data.map(flight => `
                <tr>
                    <td>${flight['Flight Number']}</td>
                    <td>${flight['Departure Airport']}</td>
                    <td>${flight['Arrival Airport']}</td>
                    <td>${formatDateTime(flight['Departure Date & Time'])}</td> <!-- Format date and time -->
                    <td>$${flight['Base Price']}</td>
                </tr>
            `).join('');
            tableHTML += `
                    </tbody>
                </table>
            `;
            resultDiv.innerHTML = tableHTML; // Insert the table into the result div
        }
    })
    .catch(error => {
        console.error('Error:', error);
        document.getElementById('returnFlightResult').innerText = error.message;
    });
});

// AJAX for changing flight status
document.getElementById('changeFlightStatusForm').addEventListener('submit', function(event) {
    event.preventDefault();
    const formData = new FormData(this);
    const flightNumber = document.getElementById('status_flight_number').value;
    const departureDatetime = document.getElementById('status_departure_datetime').value;
    fetch(`/staff/change-flight-status/${flightNumber}/${departureDatetime}`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: new URLSearchParams(formData)
    })
    .then(response => {
        console.log('Response status:', response.status);
        return response.text().then(text => {
            console.log('Response text:', text);
            if (!response.ok) {
                throw new Error(text);
            }
            return JSON.parse(text);
        });
    })
    .then(data => {
        console.log('Change flight status response:', data);
        document.getElementById('changeFlightStatusResult').innerText = data.message || 'Operation completed';
    })
    .catch(error => {
        console.error('Error:', error);
        document.getElementById('changeFlightStatusResult').innerText = error.message;
    });
});

// Fetch and populate the airplane dropdowns
fetch('/staff/airplanes')
    .then(response => response.json())
    .then(airplanes => {
        const createSelect = document.getElementById('create_airplane_id');
        const updateSelect = document.getElementById('update_airplane_id');
        airplanes.forEach(airplane => {
            const option = document.createElement('option');
            option.value = airplane.airplane_id;
            option.text = `${airplane.manufacturing_company} ${airplane.model_number} - ${airplane.airplane_id}`;
            createSelect.add(option.cloneNode(true));
            updateSelect.add(option);
        });
    })
    .catch(error => console.error('Error fetching airplanes:', error));

// AJAX for adding an airport
document.getElementById('addAirportForm').addEventListener('submit', function(event) {
    event.preventDefault();
    const formData = new FormData(this);
    fetch('/staff/add-airport', {
        method: 'POST',
        body: new URLSearchParams(formData)
    })
    .then(response => response.json())
    .then(data => {
        document.getElementById('addAirportResult').innerText = data.message;
    })
    .catch(error => {
        console.error('Error:', error);
        document.getElementById('addAirportResult').innerText = 'Error adding airport';
    });
});

// AJAX for adding an airplane
document.getElementById('addAirplaneForm').addEventListener('submit', function(event) {
    event.preventDefault();
    const formData = new FormData(this);
    fetch('/staff/add-airplane', {
        method: 'POST',
        body: new URLSearchParams(formData)
    })
    .then(response => response.json())
    .then(data => {
        document.getElementById('addAirplaneResult').innerText = data.message;
    })
    .catch(error => {
        console.error('Error:', error);
        document.getElementById('addAirplaneResult').innerText = 'Error adding airplane';
    });
});

// AJAX for viewing airplanes
document.getElementById('viewAirplanesButton').addEventListener('click', function() {
    fetch('/staff/view-airplanes', {
        method: 'GET'
    })
    .then(response => response.json())
    .then(data => {
        const resultDiv = document.getElementById('viewAirplanesResult');
        if (Array.isArray(data) && data.length > 0) {
            let table = `<table class="styled-table">
                            <thead>
                                <tr>
                                    <th>Airplane ID</th>
                                    <th>Number of Seats</th>
                                    <th>Manufacturing Company</th>
                                    <th>Model Number</th>
                                    <th>Manufacturing Date</th>
                                </tr>
                            </thead>
                            <tbody>`;
            data.forEach(airplane => {
                table += `<tr>
                            <td>${airplane.airplane_id}</td>
                            <td>${airplane.number_of_seats}</td>
                            <td>${airplane.manufacturing_company}</td>
                            <td>${airplane.model_number}</td>
                            <td>${new Date(airplane.manufacturing_date).toLocaleDateString()}</td>
                          </tr>`;
            });
            table += `</tbody></table>`;
            resultDiv.innerHTML = table;
        } else {
            resultDiv.innerText = 'No airplanes found';
        }
    })
    .catch(error => {
        console.error('Error:', error);
        document.getElementById('viewAirplanesResult').innerText = 'Error retrieving airplanes';
    });
});
</script>
