<h2>Search Flights</h2>
<link rel="stylesheet" href="/css/main.css">
<form id="toFlightForm">
    <input type="text" name="departureAirport" placeholder="Departure Airport" required>
    <input type="text" name="arrivalAirport" placeholder="Arrival Airport" required>
    <input type="date" name="departureDate" placeholder="Departure Date" required>
    <button type="submit" class="btn">View To Flight</button>
</form>
<div id="toFlightResult"></div>

<!-- Form for the "return" flight -->
<form id="returnFlightForm">
    <input type="text" name="departureAirport" placeholder="Departure Airport" required>
    <input type="text" name="arrivalAirport" placeholder="Arrival Airport" required>
    <input type="date" name="departureDate" placeholder="Return Date" required>
    <button type="submit" class="btn">View Return Flight</button>
</form>
<div id="returnFlightResult"></div>


<script>
    // AJAX for viewing the "to" flight
    document.getElementById('toFlightForm').addEventListener('submit', function(event) {
        event.preventDefault(); // Prevent default form submission

        // Collect form data
        const formData = new FormData(this);
        const queryParams = new URLSearchParams(formData).toString(); // Convert form data to query string

        // Fetch flights with query parameters
        fetch(`/public/search-flights?${queryParams}`, {
            method: 'GET'
        })
        .then(response => response.json())
        .then(data => {
            const resultDiv = document.getElementById('toFlightResult'); // Get result div
            if (!Array.isArray(data) || data.length === 0) {
                // Display message if no flights found
                resultDiv.innerHTML = '<p>No flights found.</p>';
            } else {
                // Display flights if found, including airline name and base price
                resultDiv.innerHTML = data.map(flight => `
                    <p>${flight['Airline']} Flight ${flight['Flight Number']} - ${flight['Departure Airport']} to ${flight['Arrival Airport']} on ${flight['Departure Date & Time']} - Base Price: $${flight['Base Price']}</p>
                `).join('');
            }
        })
        .catch(error => {
            console.error('Error:', error); // Log error
            document.getElementById('toFlightResult').innerText = error.message; // Display error message
        });
    });

    // AJAX for viewing the "return" flight
    document.getElementById('returnFlightForm').addEventListener('submit', function(event) {
        event.preventDefault(); // Prevent default form submission

        // Collect form data
        const formData = new FormData(this);
        const queryParams = new URLSearchParams(formData).toString(); // Convert form data to query string

        // Fetch flights with query parameters
        fetch(`/public/search-flights?${queryParams}`, {
            method: 'GET'
        })
        .then(response => response.json())
        .then(data => {
            const resultDiv = document.getElementById('returnFlightResult'); // Get result div
            if (!Array.isArray(data) || data.length === 0) {
                // Display message if no flights found
                resultDiv.innerHTML = '<p>No flights found.</p>';
            } else {
                // Display flights if found, including airline name and base price
                resultDiv.innerHTML = data.map(flight => `
                    <p>${flight['Airline']} Flight ${flight['Flight Number']} - ${flight['Departure Airport']} to ${flight['Arrival Airport']} on ${flight['Departure Date & Time']} - Base Price: $${flight['Base Price']}</p>
                `).join('');
            }
        })
        .catch(error => {
            console.error('Error:', error); // Log error
            document.getElementById('returnFlightResult').innerText = error.message; // Display error message
        });
    });
