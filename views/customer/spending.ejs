<h2>Total Spending for the Past Year</h2>
<button id="totalYearSpendingButton">Get Total Spending</button>

<div id="totalYearSpendingResult"></div>

<h2>Monthly Spending for the Last 6 Months</h2>
<button id="monthlySpendingButton">Get Monthly Spending</button>

<div id="monthlySpendingResult"></div>

<h2>Total Spending for a Specified Date Range</h2>
<form id="totalRangeSpendingForm">
    <label for="startDate">Start Date:</label>
    <input type="date" id="startDate" name="startDate" required>

    <label for="endDate">End Date:</label>
    <input type="date" id="endDate" name="endDate" required>

    <button type="submit">Get Spending</button>
</form>

<div id="totalRangeSpendingResult"></div>

<script>
document.getElementById('totalYearSpendingButton').addEventListener('click', function() {
    fetch('/customer/spending/total-year', {
        method: 'GET' // Use GET method to fetch data
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok'); // Throw an error if response is not ok
        }
        return response.json(); // Parse the response as JSON
    })
    .then(data => {
        if (data.total_spent !== undefined) {
            // Check if total_spent is present in the response
            document.getElementById('totalYearSpendingResult').innerText = `Total Spent: $${data.total_spent}`;
        } else {
            // Handle unexpected response format
            document.getElementById('totalYearSpendingResult').innerText = 'Unexpected response format';
        }
    })
    .catch(error => {
        // Log the error and display a user-friendly message
        console.error('Error:', error);
        document.getElementById('totalYearSpendingResult').innerText = 'An error occurred while fetching total spending';
    });
});

document.getElementById('monthlySpendingButton').addEventListener('click', function() {
    fetch('/customer/spending/monthly-last-6-months', {
        method: 'GET' // Use GET method to fetch data
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok'); // Throw an error if response is not ok
        }
        return response.json(); // Parse the response as JSON
    })
    .then(data => {
        const resultDiv = document.getElementById('monthlySpendingResult');
        if (Array.isArray(data)) {
            // Check if data is an array
            resultDiv.innerHTML = data.map(month => `<p>${month.month}: $${month.total_spent}</p>`).join('');
        } else {
            // Handle unexpected response format
            resultDiv.innerText = 'Unexpected response format';
        }
    })
    .catch(error => {
        // Log the error and display a user-friendly message
        console.error('Error:', error);
        document.getElementById('monthlySpendingResult').innerText = 'An error occurred while fetching monthly spending';
    });
});

document.getElementById('totalRangeSpendingForm').addEventListener('submit', function(event) {
    event.preventDefault(); // Prevent the default form submission
    const formData = new FormData(this); // Create a FormData object from the form
    fetch('/customer/spending/total-range?' + new URLSearchParams(formData), {
        method: 'GET' // Use GET method to fetch data
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok'); // Throw an error if response is not ok
        }
        return response.json(); // Parse the response as JSON
    })
    .then(data => {
        const resultDiv = document.getElementById('totalRangeSpendingResult');
        if (data.total && data.monthly && Array.isArray(data.monthly)) {
            // Check if total and monthly data are present and monthly is an array
            resultDiv.innerHTML = `<p>Total Spent: $${data.total.total_spent}</p>` +
                data.monthly.map(month => `<p>${month.month}: $${month.total_spent}</p>`).join('');
        } else {
            // Handle unexpected response format
            resultDiv.innerText = 'Unexpected response format';
        }
    })
    .catch(error => {
        // Log the error and display a user-friendly message
        console.error('Error:', error);
        document.getElementById('totalRangeSpendingResult').innerText = 'An error occurred while fetching spending data';
    });
});
</script>